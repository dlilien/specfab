name: pypi deployer
on:
  push:
    branches:
      - 'docker'

jobs:
  # Build and deploy manylinux wheel
  Linux-build:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - name: Build manylinux wheels
        using: 'docker'
        image: 'Dockerfile'
      - name: Deploy manylinux
        run: |
            twine upload wheelhouse/*manylinux*.whl

  # deploy source distribution
  Source-dist:
    runs-on: windows-latest
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: create source distribution
        run: python setup.py sdist
      - name: upload source distribution
        run: |
          pip install twine
          twine upload dist/*
        continue-on-error: true

  # Build and deploy wheels for macos and windows using setup-python action.
  # This has nothing to do with manylinux-wheel-builder.
  # I have just put them for the purpose of completion.
  Matrix-build:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: build wheel
        run: |
          pip install wheel
          python setup.py bdist_wheel
      - name: upload wheel
        run: |
          pip install twine
          twine upload dist/*
        continue-on-error: true
